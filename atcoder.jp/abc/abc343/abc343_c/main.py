#!/usr/bin/env python3
# from typing import *


def check(K, check_list):
    # x^3 = Kを満たすxが存在しないならFalse
    if K not in check_list:
        return False
    # Kの桁数が偶数だったらFalse
    if len(str(K)) % 2 == 0:
        return False
    len_k = len(str(K))
    if K[: (len_k // 2)][::-1] != K[-(len_k) // 2 + 1]:
        return False
    return True


# def solve(N: int) -> int:
def solve(N):
    """
    1. 全探索
        10^18だから間に合わない
    2. 二分探索
        答えの範囲を求めるわけではないからだめ
    3. 他に減らすには？
    """
    tmp = list([i**3 for i in range(10**6, 0, -1) if i**3 <= N])
    for n in tmp:
        len_n = len(str(n))
        if n < 9:
            if n in tmp:
                return n
        if len_n % 2 == 1:
            if str(n)[: len_n // 2] == str(n)[-len_n // 2 + 1 :][::-1]:
                return n
        else:
            if str(n)[: len_n // 2] == str(n)[len_n // 2 :][::-1]:
                return n


# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    N = int(input())
    a = solve(N)
    print(a)


if __name__ == "__main__":
    main()

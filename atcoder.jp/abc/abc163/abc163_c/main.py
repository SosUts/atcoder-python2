#!/usr/bin/env python3
# from typing import *
from collections import defaultdict


# def solve(N: int, A: List[int]) -> List[str]:
def solve(N, A):
    d = dict()
    for i in range(1, N + 1):
        d[i] = []
    for i, a in enumerate(A, start=1):
        d[a].append(i)
    return d


# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    import sys

    tokens = iter(sys.stdin.read().split())
    N = int(next(tokens))
    A = [None for _ in range(N - 1)]
    for i in range(N - 1):
        A[i] = int(next(tokens))
    assert next(tokens, None) is None
    ans = solve(N, A)
    for i in ans.values():
        print(len(i))


if __name__ == "__main__":
    main()
